#!/bin/bash
#
# Create the list of (source) files fo a given flavour
#

# The files are categorized by a tag inside. This tag has the form:
# :flavour: ... (FLAVOUR,X) ...
# where
#  - FLAVOUR is the name of the current library flavour
#    (or 'all' matched by all flavours)
#  - X is one of the following classifiers:
#    'd'   Distribution file
#          Not really a source file, but being included in a tarball.
#
#    'h'   Public header file
#          Needs to be included in a public header directory, even if
#          a binary-only version of the library is created.
#
#    'H'   Public header file, used for synthesis as well
#          Same as 'h', but is additionally used as a synthesis header
#          and therefore found by the 'SYN' class.
#          Note: Here any flavour matches!
#
#    's'   Source file
#          Needs to be included in a source distribution tarball of
#          that flavour.

# This script gets three command line arguments:
#    $0 FLAVOUR BASEDIR DESTDIR [CLASSES]
# and writes its results to a make(1) compatible file named
#    DESTDIR/FLAVOUR/files.mk
#
# Supported classes are DST, SRC, HDR, and SYN.  Default
# classes are 'DST SRC HDR'.
#

FLAVOUR=$1
BASEDIR=$2
DESTDIR=$3

shift 3
CLASSES="${*:-DST HDR SRC}"

TARGET="${DESTDIR}/${FLAVOUR}/files.mk"

if [ -z "${FLAVOUR}" ] ; then
    echo "[ERR] Invalid flavour given!"
    exit 1
fi
if [ ! -d "${BASEDIR}" ] ; then
    echo "[ERR] Base directory not found."
    exit 1
fi
if [ ! -d "${DESTDIR}/${FLAVOUR}" ] ; then

  if [ ! -d "${DESTDIR}/" ] ; then 
    echo "[ERR] Target directory not found."
    exit 1
  else
    # write to plain file in DESTDIR
    TARGET="${DESTDIR}/${FLAVOUR}.files.mk"
  fi
fi


write_header () {
cat <<EOHEADER
# -------------------------------------------------------------------
#  File list for flavour '${FLAVOUR}' of OSSS library
# -------------------------------------------------------------------
#          THIS FILE IS AUTOMATICALLY GENERATED - DO NOT EDIT
# -------------------------------------------------------------------
# `date` - :flavour: (${FLAVOUR},d)
#
EOHEADER
}

find_files() {
    F='(all|'"${FLAVOUR}"')'
    echo "${FLAVOUR}"'_AUTO_'"$1"'_FILES := \'
    case "$1" in
        DST)
            # only search build/ and src/ automatically
            # add Makefile explicitly
            SRCDIRS="${BASEDIR}/Makefile ${BASEDIR}/build ${BASEDIR}/src"
            P='d'
            ;;
        SRC)
            # only search src/ automatically
            SRCDIRS=${BASEDIR}/src
            P='[shH]'
            ;;
        HDR)
            # only search src/ automatically
            SRCDIRS=${BASEDIR}/src
            P='[hH]'
            ;;
        SYN)
            # only search src/ automatically
            SRCDIRS=${BASEDIR}/src
            P='H'
            F='\w+'
    esac
    find ${SRCDIRS} \
        '(' -name '*.o' -o -name '*.d' -o -name '*.a' \
            -o -name '*~' -o -name '*.bak' -o -name '#*#' -o -name '*%' \
            -o -name '.*.swp' \
            -o -name '*.orig' -o -name '*.rej' \
            -o -name .svn -o -name CVS ')' -prune \
        -o '(' -type f ')' -print | \
        xargs \
          egrep -l -e ':flavour:.*\('${F}','${P}'\)'  \
           | sed -e 's/\(.*\)/    \1 \\/' ;
    echo
    echo # important - we need to explicitly separate commands
}

# remove target, if it exists
rm -f ${TARGET}
# write output to target file
exec > ${TARGET}
# write header
write_header
# write file
for CLASS in ${CLASSES} ; do
    find_files $CLASS
done

# $Id: filelist.sh 2886 2008-12-10 10:23:47Z philipph $
# :flavour: (all,d)
